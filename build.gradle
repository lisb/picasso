buildscript {
  ext.versions = [
    'compileSdk': 28,
    'minSdk': 14,
    'targetSdk': 27,
    'sourceCompatibility': JavaVersion.VERSION_1_7,
    'targetCompatibility': JavaVersion.VERSION_1_7,
    'okhttp': '3.10.0',
  ]

  ext.deps = [
    androidPlugin: 'com.android.tools.build:gradle:3.0.1',
    okhttp: "com.squareup.okhttp3:okhttp:${versions.okhttp}",
    mockWebServer: "com.squareup.okhttp3:mockwebserver:${versions.okhttp}",
    pollexor: 'com.squareup:pollexor:2.0.4',
    supportCompat: 'androidx.core:core:1.0.1',
    supportFragment: 'androidx.fragment:fragment:1.0.0',
    supportAnnotations: 'androidx.annotation:annotation:1.0.2',
    supportExifInterface: 'androidx.exifinterface:exifinterface:1.0.0',
    junit: 'junit:junit:4.12',
    truth: 'com.google.truth:truth:0.36',
    robolectric: 'org.robolectric:robolectric:3.1',
    mockito: 'org.mockito:mockito-core:1.9.5'
  ]

  ext.isCi = "true" == System.getenv('CI')

  repositories {
    jcenter()
    google()
  }

  dependencies {
    classpath deps.androidPlugin
  }
}

subprojects {
  repositories {
    jcenter()
    google()
  }

  tasks.withType(Test) {
    testLogging {
      events "failed"
      exceptionFormat "full"
      showExceptions true
      showStackTraces true
      showCauses true
    }
  }

  plugins.apply('checkstyle')

  task('checkstyle', type: Checkstyle) {
    configFile rootProject.file('checkstyle.xml')
    source 'src/main/java'
    ignoreFailures false
    showViolations true
    include '**/*.java'

    classpath = files()
  }

  group = GROUP
  version = VERSION_NAME

  afterEvaluate {
    tasks.findByName('check').dependsOn('checkstyle')
  }
}